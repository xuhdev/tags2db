AC_PREREQ(2.59)
AC_INIT(tags2db.c, 0.9git, xuhdev@gmail.com)
AC_CONFIG_HEADERS(config.h)
AM_INIT_AUTOMAKE(tags2db, 0.9git)
AC_CONFIG_MACRO_DIR(m4)

# Checks for programs.
AC_PROG_CC

# Checks for libraries.

# check for sqlite3. Currently it is necessary.
AX_LIB_SQLITE3
echo $HAVE_SQLITE3
if test "$success" = "yes"; then
    CFLAGS="$CFLAGS $SQLITE3_CFLAGS"
    LIBS="$LIBS $SQLITE3_LDFLAGS"
else
    AC_MSG_ERROR(Sqlite3 not found.)
fi

# gccxml
# if --enable-gccxml is not specified, enable this feature when both libxml2
# and fileno is presented is available; if --enable-gccxml is specified, do as
# specified
AC_ARG_ENABLE(gccxml,
              [  --enable-gccxml  Enable gccxml support],
              [ENABLED_GCCXML="$enableval"],
              [ENABLED_GCCXML="auto"])

if test "x$ENABLED_GCCXML" != "xyes" -a "x$ENABLED_GCCXML" != "xno" -a \
    "x$ENABLED_GCCXML" != "xauto"; then
    AC_MSG_ERROR([Uknown ENABLED_GCCXML value: $ENABLED_GCCXML])
fi

AM_PATH_XML2(2.5.0, [LIBXML2_PRESENT="yes"], [LIBXML2_PRESENT="no"])
AC_CHECK_FUNC(fileno, [FUNC_FILENO_PRESENT="yes"], [FUNC_FILENO_PRESENT="no"])

if test "x$LIBXML2_PRESENT" = "xyes" -a "x$FUNC_FILENO_PRESENT" = "xyes"; then
    GCCXML_PRECONDITION="yes"
else
    GCCXML_PRECONDITION="no"
fi

if test "x$GCCXML_PRECONDITION" = "xno"; then
    if test "x$ENABLED_GCCXML" = "xyes"; then
        if test "x$LIBXML2_PRESENT" = "xno"; then
            AC_MSG_ERROR([Libxml2 is not found, thus gccxml support could not be enabled. Run ./configure with "--disable-gccxml" to disable gccxml support.])
        fi
        if test "x$FUNC_FILENO_PRESENT" = "xno"; then
            AC_MSG_ERROR([Function "fileno" is not found, thus gccxml support could not be enabled. Run ./configure with "--disable-gccxml" to disable gccxml support.])
        fi
        AC_MSG_ERROR([Gccxml support could not be enabled for unknown reason. Run ./configure with "--disable-gccxml" to disable gccxml support.])
    fi
    ENABLED_GCCXML="no"
elif test "x$GCCXML_PRECONDITION" = "xyes"; then
    if test "x$ENABLED_GCCXML" = "xno"; then
        ENABLED_GCCXML="no"
    else
        ENABLED_GCCXML="yes"
    fi
else
    AC_MSG_ERROR([Uknown value of LIBXML2_PRESENT: $LIBXML2_PRESENT])
fi

if test "x$ENABLED_GCCXML" = "xyes"; then
    AC_DEFINE([ENABLED_GCCXML], [1],
              [Define if you want to build with gccxml support])
    CPPFLAGS="$CFLAGS $XML_CPPFLAGS"
    LIBS="$LIBS $XML_LIBS"
fi

# Checks for header files.

#check for headers that we must have
AC_CHECK_HEADERS([stddef.h stdio.h stdlib.h string.h],
                 [],
                 [AC_MSG_ERROR(Some essential header files are not found.)])

# check for optional headers
AC_CHECK_HEADERS([inttypes.h stdint.h])
AC_HEADER_STDBOOL

# Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_INT8_T
AC_CHECK_TYPES([size_t])

# Checks for library functions.

# we check malloc here but not using AC_FUNC_MALLOC because we don't need a gcc
# compatible malloc
AC_CHECK_FUNCS( \
               fclose \
               fgets \
               fopen \
               fprintf \
               free \
               malloc \
               memmove \
               memset \
               perror \
               printf \
               strcat \
               strchr \
               strcmp \
               strdup \
               strlen \
               strncpy \
               strrchr \
               strstr \
               strtok,
               [],
               [AC_MSG_ERROR(Some essentially required function not found.)]
               )

# non-essential functions
AC_CHECK_FUNCS( \
               strndup)

AC_OUTPUT([Makefile src/Makefile])

echo "
                 tags2db

  ---------------- features ----------------

  Tags support:
  ctags ........................ yes
  gccxml ....................... $ENABLED_GCCXML

  Database support:
  sqlite3 ...................... yes

  Use 'make' to build and 'make install' to install tags2db
  "
